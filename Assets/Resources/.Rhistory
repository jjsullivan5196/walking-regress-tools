setwd("C:/Users/gameprogrammer/Documents/walking-regress-tools/Assets/Resources")
source("funcs.R")
byTime = TRUE
acc = read.csv("john-walking-acc.csv", header = FALSE, col.names = c("comx","comy","comz","time"))
gyro = read.csv("john-walking-gyro.csv", header = FALSE, col.names = c("comx","comy","comz","time"))
acc_smooth = data.frame(comx = predict(loess(comx ~ time, data = acc, span = 0.07)), comy = predict(loess(comy ~ time, data = acc, span = 0.07)), comz = predict(loess(comz ~ time, data = acc, span = 0.07)), time = acc$time)
acc_smooth = zero_time(acc, 250, 284)
gyro = zero_time(gyro, 250, 284)
par(mfcol = c(3, 2))
if(!byTime) {
plot(acc$comx, type = "l", col = "red", ylab = "X", xlab = "schmeconds", main = "Accelerometer Values")
plot(acc$comy, type = "l", col = "green", ylab = "Y", xlab = "schmeconds")
plot(acc$comz, type = "l", col = "blue", ylab = "Z", xlab = "schmeconds")
plot(gyro$comx, type = "l", ylab = "X", xlab = "schmeconds", col = "red", main = "Gyroscope Values")
plot(gyro$comy, type = "l", ylab = "Y", xlab = "schmeconds", col = "green")
plot(gyro$comz, type = "l", ylab = "Z", xlab = "schmeconds", col = "blue")
}
if(byTime) {
# plot(acc$time, acc$comx, type = "l", ylab = "X", xlab = "time", col = "red", main = "Accelerometer Values")
# plot(acc$time, acc$comy, type = "l", ylab = "Y", xlab = "time", col = "green")
# plot(acc$time, acc$comz, type = "l", ylab = "Z", xlab = "time", col = "blue")
plot(acc_smooth$time, acc_smooth$comx, type = "l", ylab = "X", xlab = "time", col = "red", main = "Accelerometer Values")
plot(acc_smooth$time, acc_smooth$comy, type = "l", ylab = "Y", xlab = "time", col = "green")
plot(acc_smooth$time, acc_smooth$comz, type = "l", ylab = "Z", xlab = "time", col = "blue")
plot(gyro$time, gyro$comx, type = "l", ylab = "X", xlab = "time", col = "red", main = "Gyroscope Values")
plot(gyro$time, gyro$comy, type = "l", ylab = "Y", xlab = "time", col = "green")
plot(gyro$time, gyro$comz, type = "l", ylab = "Z", xlab = "time", col = "blue")
}
acc = zero_time(acc, 250, 284)
setwd("C:/Users/gameprogrammer/Documents/walking-regress-tools/Assets/Resources")
source("funcs.R")
byTime = TRUE
acc = read.csv("john-walking-acc.csv", header = FALSE, col.names = c("comx","comy","comz","time"))
gyro = read.csv("john-walking-gyro.csv", header = FALSE, col.names = c("comx","comy","comz","time"))
acc_smooth = data.frame(comx = predict(loess(comx ~ time, data = acc, span = 0.07)), comy = predict(loess(comy ~ time, data = acc, span = 0.07)), comz = predict(loess(comz ~ time, data = acc, span = 0.07)), time = acc$time)
acc = zero_time(acc, 250, 284)
gyro = zero_time(gyro, 250, 284)
par(mfcol = c(3, 2))
if(!byTime) {
plot(acc$comx, type = "l", col = "red", ylab = "X", xlab = "schmeconds", main = "Accelerometer Values")
plot(acc$comy, type = "l", col = "green", ylab = "Y", xlab = "schmeconds")
plot(acc$comz, type = "l", col = "blue", ylab = "Z", xlab = "schmeconds")
plot(gyro$comx, type = "l", ylab = "X", xlab = "schmeconds", col = "red", main = "Gyroscope Values")
plot(gyro$comy, type = "l", ylab = "Y", xlab = "schmeconds", col = "green")
plot(gyro$comz, type = "l", ylab = "Z", xlab = "schmeconds", col = "blue")
}
if(byTime) {
# plot(acc$time, acc$comx, type = "l", ylab = "X", xlab = "time", col = "red", main = "Accelerometer Values")
# plot(acc$time, acc$comy, type = "l", ylab = "Y", xlab = "time", col = "green")
# plot(acc$time, acc$comz, type = "l", ylab = "Z", xlab = "time", col = "blue")
plot(acc$time, acc$comx, type = "l", ylab = "X", xlab = "time", col = "red", main = "Accelerometer Values")
plot(acc$time, acc$comy, type = "l", ylab = "Y", xlab = "time", col = "green")
plot(acc$time, acc$comz, type = "l", ylab = "Z", xlab = "time", col = "blue")
plot(gyro$time, gyro$comx, type = "l", ylab = "X", xlab = "time", col = "red", main = "Gyroscope Values")
plot(gyro$time, gyro$comy, type = "l", ylab = "Y", xlab = "time", col = "green")
plot(gyro$time, gyro$comz, type = "l", ylab = "Z", xlab = "time", col = "blue")
}
setwd("C:/Users/gameprogrammer/Documents/walking-regress-tools/Assets/Resources")
source("funcs.R")
byTime = TRUE
acc = read.csv("daniel-walking-acc.csv", header = FALSE, col.names = c("comx","comy","comz","time"))
gyro = read.csv("daniel-walking-gyro.csv", header = FALSE, col.names = c("comx","comy","comz","time"))
acc_smooth = data.frame(comx = predict(loess(comx ~ time, data = acc, span = 0.07)), comy = predict(loess(comy ~ time, data = acc, span = 0.07)), comz = predict(loess(comz ~ time, data = acc, span = 0.07)), time = acc$time)
acc_smooth = zero_time(acc, 250, 284)
gyro = zero_time(gyro, 250, 284)
par(mfcol = c(3, 2))
if(!byTime) {
plot(acc$comx, type = "l", col = "red", ylab = "X", xlab = "schmeconds", main = "Accelerometer Values")
plot(acc$comy, type = "l", col = "green", ylab = "Y", xlab = "schmeconds")
plot(acc$comz, type = "l", col = "blue", ylab = "Z", xlab = "schmeconds")
plot(gyro$comx, type = "l", ylab = "X", xlab = "schmeconds", col = "red", main = "Gyroscope Values")
plot(gyro$comy, type = "l", ylab = "Y", xlab = "schmeconds", col = "green")
plot(gyro$comz, type = "l", ylab = "Z", xlab = "schmeconds", col = "blue")
}
if(byTime) {
# plot(acc$time, acc$comx, type = "l", ylab = "X", xlab = "time", col = "red", main = "Accelerometer Values")
# plot(acc$time, acc$comy, type = "l", ylab = "Y", xlab = "time", col = "green")
# plot(acc$time, acc$comz, type = "l", ylab = "Z", xlab = "time", col = "blue")
plot(acc_smooth$time, acc_smooth$comx, type = "l", ylab = "X", xlab = "time", col = "red", main = "Accelerometer Values")
plot(acc_smooth$time, acc_smooth$comy, type = "l", ylab = "Y", xlab = "time", col = "green")
plot(acc_smooth$time, acc_smooth$comz, type = "l", ylab = "Z", xlab = "time", col = "blue")
plot(gyro$time, gyro$comx, type = "l", ylab = "X", xlab = "time", col = "red", main = "Gyroscope Values")
plot(gyro$time, gyro$comy, type = "l", ylab = "Y", xlab = "time", col = "green")
plot(gyro$time, gyro$comz, type = "l", ylab = "Z", xlab = "time", col = "blue")
}
setwd("C:/Users/gameprogrammer/Documents/walking-regress-tools/Assets/Resources")
source("funcs.R")
smoothconstant = 0.07
byTime = TRUE
acc = read.csv("daniel-walking-acc.csv", header = FALSE, col.names = c("comx","comy","comz","time"))
gyro = read.csv("daniel-walking-gyro.csv", header = FALSE, col.names = c("comx","comy","comz","time"))
acc_smooth = data.frame(comx = predict(loess(comx ~ time, data = acc, span = smoothconstant)), comy = predict(loess(comy ~ time, data = acc, span = smoothconstant)), comz = predict(loess(comz ~ time, data = acc, span = smoothconstant)), time = acc$time)
acc_smooth = zero_time(acc, 250, 284)
gyro = zero_time(gyro, 250, 284)
par(mfcol = c(3, 2))
if(!byTime) {
plot(acc$comx, type = "l", col = "red", ylab = "X", xlab = "schmeconds", main = "Accelerometer Values")
plot(acc$comy, type = "l", col = "green", ylab = "Y", xlab = "schmeconds")
plot(acc$comz, type = "l", col = "blue", ylab = "Z", xlab = "schmeconds")
plot(gyro$comx, type = "l", ylab = "X", xlab = "schmeconds", col = "red", main = "Gyroscope Values")
plot(gyro$comy, type = "l", ylab = "Y", xlab = "schmeconds", col = "green")
plot(gyro$comz, type = "l", ylab = "Z", xlab = "schmeconds", col = "blue")
}
if(byTime) {
# plot(acc$time, acc$comx, type = "l", ylab = "X", xlab = "time", col = "red", main = "Accelerometer Values")
# plot(acc$time, acc$comy, type = "l", ylab = "Y", xlab = "time", col = "green")
# plot(acc$time, acc$comz, type = "l", ylab = "Z", xlab = "time", col = "blue")
plot(acc_smooth$time, acc_smooth$comx, type = "l", ylab = "X", xlab = "time", col = "red", main = "Accelerometer Values")
plot(acc_smooth$time, acc_smooth$comy, type = "l", ylab = "Y", xlab = "time", col = "green")
plot(acc_smooth$time, acc_smooth$comz, type = "l", ylab = "Z", xlab = "time", col = "blue")
plot(gyro$time, gyro$comx, type = "l", ylab = "X", xlab = "time", col = "red", main = "Gyroscope Values")
plot(gyro$time, gyro$comy, type = "l", ylab = "Y", xlab = "time", col = "green")
plot(gyro$time, gyro$comz, type = "l", ylab = "Z", xlab = "time", col = "blue")
}
setwd("C:/Users/gameprogrammer/Documents/walking-regress-tools/Assets/Resources")
source("funcs.R")
smoothconstant = 0.09
byTime = TRUE
acc = read.csv("daniel-walking-acc.csv", header = FALSE, col.names = c("comx","comy","comz","time"))
gyro = read.csv("daniel-walking-gyro.csv", header = FALSE, col.names = c("comx","comy","comz","time"))
acc_smooth = data.frame(comx = predict(loess(comx ~ time, data = acc, span = smoothconstant)), comy = predict(loess(comy ~ time, data = acc, span = smoothconstant)), comz = predict(loess(comz ~ time, data = acc, span = smoothconstant)), time = acc$time)
acc_smooth = zero_time(acc, 250, 284)
gyro = zero_time(gyro, 250, 284)
par(mfcol = c(3, 2))
if(!byTime) {
plot(acc$comx, type = "l", col = "red", ylab = "X", xlab = "schmeconds", main = "Accelerometer Values")
plot(acc$comy, type = "l", col = "green", ylab = "Y", xlab = "schmeconds")
plot(acc$comz, type = "l", col = "blue", ylab = "Z", xlab = "schmeconds")
plot(gyro$comx, type = "l", ylab = "X", xlab = "schmeconds", col = "red", main = "Gyroscope Values")
plot(gyro$comy, type = "l", ylab = "Y", xlab = "schmeconds", col = "green")
plot(gyro$comz, type = "l", ylab = "Z", xlab = "schmeconds", col = "blue")
}
if(byTime) {
# plot(acc$time, acc$comx, type = "l", ylab = "X", xlab = "time", col = "red", main = "Accelerometer Values")
# plot(acc$time, acc$comy, type = "l", ylab = "Y", xlab = "time", col = "green")
# plot(acc$time, acc$comz, type = "l", ylab = "Z", xlab = "time", col = "blue")
plot(acc_smooth$time, acc_smooth$comx, type = "l", ylab = "X", xlab = "time", col = "red", main = "Accelerometer Values")
plot(acc_smooth$time, acc_smooth$comy, type = "l", ylab = "Y", xlab = "time", col = "green")
plot(acc_smooth$time, acc_smooth$comz, type = "l", ylab = "Z", xlab = "time", col = "blue")
plot(gyro$time, gyro$comx, type = "l", ylab = "X", xlab = "time", col = "red", main = "Gyroscope Values")
plot(gyro$time, gyro$comy, type = "l", ylab = "Y", xlab = "time", col = "green")
plot(gyro$time, gyro$comz, type = "l", ylab = "Z", xlab = "time", col = "blue")
}
setwd("C:/Users/gameprogrammer/Documents/walking-regress-tools/Assets/Resources")
source("funcs.R")
smoothconstant = 0.50
byTime = TRUE
acc = read.csv("daniel-walking-acc.csv", header = FALSE, col.names = c("comx","comy","comz","time"))
gyro = read.csv("daniel-walking-gyro.csv", header = FALSE, col.names = c("comx","comy","comz","time"))
acc_smooth = data.frame(comx = predict(loess(comx ~ time, data = acc, span = smoothconstant)), comy = predict(loess(comy ~ time, data = acc, span = smoothconstant)), comz = predict(loess(comz ~ time, data = acc, span = smoothconstant)), time = acc$time)
acc_smooth = zero_time(acc, 250, 284)
gyro = zero_time(gyro, 250, 284)
par(mfcol = c(3, 2))
if(!byTime) {
plot(acc$comx, type = "l", col = "red", ylab = "X", xlab = "schmeconds", main = "Accelerometer Values")
plot(acc$comy, type = "l", col = "green", ylab = "Y", xlab = "schmeconds")
plot(acc$comz, type = "l", col = "blue", ylab = "Z", xlab = "schmeconds")
plot(gyro$comx, type = "l", ylab = "X", xlab = "schmeconds", col = "red", main = "Gyroscope Values")
plot(gyro$comy, type = "l", ylab = "Y", xlab = "schmeconds", col = "green")
plot(gyro$comz, type = "l", ylab = "Z", xlab = "schmeconds", col = "blue")
}
if(byTime) {
# plot(acc$time, acc$comx, type = "l", ylab = "X", xlab = "time", col = "red", main = "Accelerometer Values")
# plot(acc$time, acc$comy, type = "l", ylab = "Y", xlab = "time", col = "green")
# plot(acc$time, acc$comz, type = "l", ylab = "Z", xlab = "time", col = "blue")
plot(acc_smooth$time, acc_smooth$comx, type = "l", ylab = "X", xlab = "time", col = "red", main = "Accelerometer Values")
plot(acc_smooth$time, acc_smooth$comy, type = "l", ylab = "Y", xlab = "time", col = "green")
plot(acc_smooth$time, acc_smooth$comz, type = "l", ylab = "Z", xlab = "time", col = "blue")
plot(gyro$time, gyro$comx, type = "l", ylab = "X", xlab = "time", col = "red", main = "Gyroscope Values")
plot(gyro$time, gyro$comy, type = "l", ylab = "Y", xlab = "time", col = "green")
plot(gyro$time, gyro$comz, type = "l", ylab = "Z", xlab = "time", col = "blue")
}
setwd("C:/Users/gameprogrammer/Documents/walking-regress-tools/Assets/Resources")
source("funcs.R")
smoothconstant = 0.07
byTime = TRUE
acc = read.csv("daniel-walking-acc.csv", header = FALSE, col.names = c("comx","comy","comz","time"))
gyro = read.csv("daniel-walking-gyro.csv", header = FALSE, col.names = c("comx","comy","comz","time"))
acc_smooth = data.frame(comx = predict(loess(comx ~ time, data = acc, span = smoothconstant)), comy = predict(loess(comy ~ time, data = acc, span = smoothconstant)), comz = predict(loess(comz ~ time, data = acc, span = smoothconstant)), time = acc$time)
acc_smooth = zero_time(acc, 250, 284)
gyro = zero_time(gyro, 250, 284)
par(mfcol = c(3, 2))
if(!byTime) {
plot(acc$comx, type = "l", col = "red", ylab = "X", xlab = "schmeconds", main = "Accelerometer Values")
plot(acc$comy, type = "l", col = "green", ylab = "Y", xlab = "schmeconds")
plot(acc$comz, type = "l", col = "blue", ylab = "Z", xlab = "schmeconds")
plot(gyro$comx, type = "l", ylab = "X", xlab = "schmeconds", col = "red", main = "Gyroscope Values")
plot(gyro$comy, type = "l", ylab = "Y", xlab = "schmeconds", col = "green")
plot(gyro$comz, type = "l", ylab = "Z", xlab = "schmeconds", col = "blue")
}
if(byTime) {
# plot(acc$time, acc$comx, type = "l", ylab = "X", xlab = "time", col = "red", main = "Accelerometer Values")
# plot(acc$time, acc$comy, type = "l", ylab = "Y", xlab = "time", col = "green")
# plot(acc$time, acc$comz, type = "l", ylab = "Z", xlab = "time", col = "blue")
plot(acc_smooth$time, acc_smooth$comx, type = "l", ylab = "X", xlab = "time", col = "red", main = "Accelerometer Values")
plot(acc_smooth$time, acc_smooth$comy, type = "l", ylab = "Y", xlab = "time", col = "green")
plot(acc_smooth$time, acc_smooth$comz, type = "l", ylab = "Z", xlab = "time", col = "blue")
plot(gyro$time, gyro$comx, type = "l", ylab = "X", xlab = "time", col = "red", main = "Gyroscope Values")
plot(gyro$time, gyro$comy, type = "l", ylab = "Y", xlab = "time", col = "green")
plot(gyro$time, gyro$comz, type = "l", ylab = "Z", xlab = "time", col = "blue")
}
setwd("C:/Users/gameprogrammer/Documents/walking-regress-tools/Assets/Resources")
source("funcs.R")
smoothconstant = 0.07
byTime = TRUE
acc = read.csv("daniel-walking-acc.csv", header = FALSE, col.names = c("comx","comy","comz","time"))
gyro = read.csv("daniel-walking-gyro.csv", header = FALSE, col.names = c("comx","comy","comz","time"))
acc_smooth = data.frame(comx = predict(loess(comx ~ time, data = acc, span = smoothconstant)), comy = predict(loess(comy ~ time, data = acc, span = smoothconstant)), comz = predict(loess(comz ~ time, data = acc, span = smoothconstant)), time = acc$time)
acc_smooth = zero_time(acc_smooth, 250, 284)
gyro = zero_time(gyro, 250, 284)
par(mfcol = c(3, 2))
if(!byTime) {
plot(acc$comx, type = "l", col = "red", ylab = "X", xlab = "schmeconds", main = "Accelerometer Values")
plot(acc$comy, type = "l", col = "green", ylab = "Y", xlab = "schmeconds")
plot(acc$comz, type = "l", col = "blue", ylab = "Z", xlab = "schmeconds")
plot(gyro$comx, type = "l", ylab = "X", xlab = "schmeconds", col = "red", main = "Gyroscope Values")
plot(gyro$comy, type = "l", ylab = "Y", xlab = "schmeconds", col = "green")
plot(gyro$comz, type = "l", ylab = "Z", xlab = "schmeconds", col = "blue")
}
if(byTime) {
# plot(acc$time, acc$comx, type = "l", ylab = "X", xlab = "time", col = "red", main = "Accelerometer Values")
# plot(acc$time, acc$comy, type = "l", ylab = "Y", xlab = "time", col = "green")
# plot(acc$time, acc$comz, type = "l", ylab = "Z", xlab = "time", col = "blue")
plot(acc_smooth$time, acc_smooth$comx, type = "l", ylab = "X", xlab = "time", col = "red", main = "Accelerometer Values")
plot(acc_smooth$time, acc_smooth$comy, type = "l", ylab = "Y", xlab = "time", col = "green")
plot(acc_smooth$time, acc_smooth$comz, type = "l", ylab = "Z", xlab = "time", col = "blue")
plot(gyro$time, gyro$comx, type = "l", ylab = "X", xlab = "time", col = "red", main = "Gyroscope Values")
plot(gyro$time, gyro$comy, type = "l", ylab = "Y", xlab = "time", col = "green")
plot(gyro$time, gyro$comz, type = "l", ylab = "Z", xlab = "time", col = "blue")
}
setwd("C:/Users/gameprogrammer/Documents/walking-regress-tools/Assets/Resources")
source("funcs.R")
smoothconstant = 0.02
byTime = TRUE
acc = read.csv("daniel-walking-acc.csv", header = FALSE, col.names = c("comx","comy","comz","time"))
gyro = read.csv("daniel-walking-gyro.csv", header = FALSE, col.names = c("comx","comy","comz","time"))
acc_smooth = data.frame(comx = predict(loess(comx ~ time, data = acc, span = smoothconstant)), comy = predict(loess(comy ~ time, data = acc, span = smoothconstant)), comz = predict(loess(comz ~ time, data = acc, span = smoothconstant)), time = acc$time)
acc_smooth = zero_time(acc_smooth, 250, 284)
gyro = zero_time(gyro, 250, 284)
par(mfcol = c(3, 2))
if(!byTime) {
plot(acc$comx, type = "l", col = "red", ylab = "X", xlab = "schmeconds", main = "Accelerometer Values")
plot(acc$comy, type = "l", col = "green", ylab = "Y", xlab = "schmeconds")
plot(acc$comz, type = "l", col = "blue", ylab = "Z", xlab = "schmeconds")
plot(gyro$comx, type = "l", ylab = "X", xlab = "schmeconds", col = "red", main = "Gyroscope Values")
plot(gyro$comy, type = "l", ylab = "Y", xlab = "schmeconds", col = "green")
plot(gyro$comz, type = "l", ylab = "Z", xlab = "schmeconds", col = "blue")
}
if(byTime) {
# plot(acc$time, acc$comx, type = "l", ylab = "X", xlab = "time", col = "red", main = "Accelerometer Values")
# plot(acc$time, acc$comy, type = "l", ylab = "Y", xlab = "time", col = "green")
# plot(acc$time, acc$comz, type = "l", ylab = "Z", xlab = "time", col = "blue")
plot(acc_smooth$time, acc_smooth$comx, type = "l", ylab = "X", xlab = "time", col = "red", main = "Accelerometer Values")
plot(acc_smooth$time, acc_smooth$comy, type = "l", ylab = "Y", xlab = "time", col = "green")
plot(acc_smooth$time, acc_smooth$comz, type = "l", ylab = "Z", xlab = "time", col = "blue")
plot(gyro$time, gyro$comx, type = "l", ylab = "X", xlab = "time", col = "red", main = "Gyroscope Values")
plot(gyro$time, gyro$comy, type = "l", ylab = "Y", xlab = "time", col = "green")
plot(gyro$time, gyro$comz, type = "l", ylab = "Z", xlab = "time", col = "blue")
}
setwd("C:/Users/gameprogrammer/Documents/walking-regress-tools/Assets/Resources")
source("funcs.R")
smoothconstant = 0.01
byTime = TRUE
acc = read.csv("daniel-walking-acc.csv", header = FALSE, col.names = c("comx","comy","comz","time"))
gyro = read.csv("daniel-walking-gyro.csv", header = FALSE, col.names = c("comx","comy","comz","time"))
acc_smooth = data.frame(comx = predict(loess(comx ~ time, data = acc, span = smoothconstant)), comy = predict(loess(comy ~ time, data = acc, span = smoothconstant)), comz = predict(loess(comz ~ time, data = acc, span = smoothconstant)), time = acc$time)
acc_smooth = zero_time(acc_smooth, 250, 284)
gyro = zero_time(gyro, 250, 284)
par(mfcol = c(3, 2))
if(!byTime) {
plot(acc$comx, type = "l", col = "red", ylab = "X", xlab = "schmeconds", main = "Accelerometer Values")
plot(acc$comy, type = "l", col = "green", ylab = "Y", xlab = "schmeconds")
plot(acc$comz, type = "l", col = "blue", ylab = "Z", xlab = "schmeconds")
plot(gyro$comx, type = "l", ylab = "X", xlab = "schmeconds", col = "red", main = "Gyroscope Values")
plot(gyro$comy, type = "l", ylab = "Y", xlab = "schmeconds", col = "green")
plot(gyro$comz, type = "l", ylab = "Z", xlab = "schmeconds", col = "blue")
}
if(byTime) {
# plot(acc$time, acc$comx, type = "l", ylab = "X", xlab = "time", col = "red", main = "Accelerometer Values")
# plot(acc$time, acc$comy, type = "l", ylab = "Y", xlab = "time", col = "green")
# plot(acc$time, acc$comz, type = "l", ylab = "Z", xlab = "time", col = "blue")
plot(acc_smooth$time, acc_smooth$comx, type = "l", ylab = "X", xlab = "time", col = "red", main = "Accelerometer Values")
plot(acc_smooth$time, acc_smooth$comy, type = "l", ylab = "Y", xlab = "time", col = "green")
plot(acc_smooth$time, acc_smooth$comz, type = "l", ylab = "Z", xlab = "time", col = "blue")
plot(gyro$time, gyro$comx, type = "l", ylab = "X", xlab = "time", col = "red", main = "Gyroscope Values")
plot(gyro$time, gyro$comy, type = "l", ylab = "Y", xlab = "time", col = "green")
plot(gyro$time, gyro$comz, type = "l", ylab = "Z", xlab = "time", col = "blue")
}
setwd("C:/Users/gameprogrammer/Documents/walking-regress-tools/Assets/Resources")
source("funcs.R")
smoothconstant = 0.005
byTime = TRUE
acc = read.csv("daniel-walking-acc.csv", header = FALSE, col.names = c("comx","comy","comz","time"))
gyro = read.csv("daniel-walking-gyro.csv", header = FALSE, col.names = c("comx","comy","comz","time"))
acc_smooth = data.frame(comx = predict(loess(comx ~ time, data = acc, span = smoothconstant)), comy = predict(loess(comy ~ time, data = acc, span = smoothconstant)), comz = predict(loess(comz ~ time, data = acc, span = smoothconstant)), time = acc$time)
acc_smooth = zero_time(acc_smooth, 250, 284)
gyro = zero_time(gyro, 250, 284)
par(mfcol = c(3, 2))
if(!byTime) {
plot(acc$comx, type = "l", col = "red", ylab = "X", xlab = "schmeconds", main = "Accelerometer Values")
plot(acc$comy, type = "l", col = "green", ylab = "Y", xlab = "schmeconds")
plot(acc$comz, type = "l", col = "blue", ylab = "Z", xlab = "schmeconds")
plot(gyro$comx, type = "l", ylab = "X", xlab = "schmeconds", col = "red", main = "Gyroscope Values")
plot(gyro$comy, type = "l", ylab = "Y", xlab = "schmeconds", col = "green")
plot(gyro$comz, type = "l", ylab = "Z", xlab = "schmeconds", col = "blue")
}
if(byTime) {
# plot(acc$time, acc$comx, type = "l", ylab = "X", xlab = "time", col = "red", main = "Accelerometer Values")
# plot(acc$time, acc$comy, type = "l", ylab = "Y", xlab = "time", col = "green")
# plot(acc$time, acc$comz, type = "l", ylab = "Z", xlab = "time", col = "blue")
plot(acc_smooth$time, acc_smooth$comx, type = "l", ylab = "X", xlab = "time", col = "red", main = "Accelerometer Values")
plot(acc_smooth$time, acc_smooth$comy, type = "l", ylab = "Y", xlab = "time", col = "green")
plot(acc_smooth$time, acc_smooth$comz, type = "l", ylab = "Z", xlab = "time", col = "blue")
plot(gyro$time, gyro$comx, type = "l", ylab = "X", xlab = "time", col = "red", main = "Gyroscope Values")
plot(gyro$time, gyro$comy, type = "l", ylab = "Y", xlab = "time", col = "green")
plot(gyro$time, gyro$comz, type = "l", ylab = "Z", xlab = "time", col = "blue")
}
setwd("C:/Users/gameprogrammer/Documents/walking-regress-tools/Assets/Resources")
source("funcs.R")
smoothconstant = 0.002
byTime = TRUE
acc = read.csv("daniel-walking-acc.csv", header = FALSE, col.names = c("comx","comy","comz","time"))
gyro = read.csv("daniel-walking-gyro.csv", header = FALSE, col.names = c("comx","comy","comz","time"))
acc_smooth = data.frame(comx = predict(loess(comx ~ time, data = acc, span = smoothconstant)), comy = predict(loess(comy ~ time, data = acc, span = smoothconstant)), comz = predict(loess(comz ~ time, data = acc, span = smoothconstant)), time = acc$time)
acc_smooth = zero_time(acc_smooth, 250, 284)
gyro = zero_time(gyro, 250, 284)
par(mfcol = c(3, 2))
if(!byTime) {
plot(acc$comx, type = "l", col = "red", ylab = "X", xlab = "schmeconds", main = "Accelerometer Values")
plot(acc$comy, type = "l", col = "green", ylab = "Y", xlab = "schmeconds")
plot(acc$comz, type = "l", col = "blue", ylab = "Z", xlab = "schmeconds")
plot(gyro$comx, type = "l", ylab = "X", xlab = "schmeconds", col = "red", main = "Gyroscope Values")
plot(gyro$comy, type = "l", ylab = "Y", xlab = "schmeconds", col = "green")
plot(gyro$comz, type = "l", ylab = "Z", xlab = "schmeconds", col = "blue")
}
if(byTime) {
# plot(acc$time, acc$comx, type = "l", ylab = "X", xlab = "time", col = "red", main = "Accelerometer Values")
# plot(acc$time, acc$comy, type = "l", ylab = "Y", xlab = "time", col = "green")
# plot(acc$time, acc$comz, type = "l", ylab = "Z", xlab = "time", col = "blue")
plot(acc_smooth$time, acc_smooth$comx, type = "l", ylab = "X", xlab = "time", col = "red", main = "Accelerometer Values")
plot(acc_smooth$time, acc_smooth$comy, type = "l", ylab = "Y", xlab = "time", col = "green")
plot(acc_smooth$time, acc_smooth$comz, type = "l", ylab = "Z", xlab = "time", col = "blue")
plot(gyro$time, gyro$comx, type = "l", ylab = "X", xlab = "time", col = "red", main = "Gyroscope Values")
plot(gyro$time, gyro$comy, type = "l", ylab = "Y", xlab = "time", col = "green")
plot(gyro$time, gyro$comz, type = "l", ylab = "Z", xlab = "time", col = "blue")
}
setwd("C:/Users/gameprogrammer/Documents/walking-regress-tools/Assets/Resources")
source("funcs.R")
smoothconstant = 0.003
byTime = TRUE
acc = read.csv("daniel-walking-acc.csv", header = FALSE, col.names = c("comx","comy","comz","time"))
gyro = read.csv("daniel-walking-gyro.csv", header = FALSE, col.names = c("comx","comy","comz","time"))
acc_smooth = data.frame(comx = predict(loess(comx ~ time, data = acc, span = smoothconstant)), comy = predict(loess(comy ~ time, data = acc, span = smoothconstant)), comz = predict(loess(comz ~ time, data = acc, span = smoothconstant)), time = acc$time)
acc_smooth = zero_time(acc_smooth, 250, 284)
gyro = zero_time(gyro, 250, 284)
par(mfcol = c(3, 2))
if(!byTime) {
plot(acc$comx, type = "l", col = "red", ylab = "X", xlab = "schmeconds", main = "Accelerometer Values")
plot(acc$comy, type = "l", col = "green", ylab = "Y", xlab = "schmeconds")
plot(acc$comz, type = "l", col = "blue", ylab = "Z", xlab = "schmeconds")
plot(gyro$comx, type = "l", ylab = "X", xlab = "schmeconds", col = "red", main = "Gyroscope Values")
plot(gyro$comy, type = "l", ylab = "Y", xlab = "schmeconds", col = "green")
plot(gyro$comz, type = "l", ylab = "Z", xlab = "schmeconds", col = "blue")
}
if(byTime) {
# plot(acc$time, acc$comx, type = "l", ylab = "X", xlab = "time", col = "red", main = "Accelerometer Values")
# plot(acc$time, acc$comy, type = "l", ylab = "Y", xlab = "time", col = "green")
# plot(acc$time, acc$comz, type = "l", ylab = "Z", xlab = "time", col = "blue")
plot(acc_smooth$time, acc_smooth$comx, type = "l", ylab = "X", xlab = "time", col = "red", main = "Accelerometer Values")
plot(acc_smooth$time, acc_smooth$comy, type = "l", ylab = "Y", xlab = "time", col = "green")
plot(acc_smooth$time, acc_smooth$comz, type = "l", ylab = "Z", xlab = "time", col = "blue")
plot(gyro$time, gyro$comx, type = "l", ylab = "X", xlab = "time", col = "red", main = "Gyroscope Values")
plot(gyro$time, gyro$comy, type = "l", ylab = "Y", xlab = "time", col = "green")
plot(gyro$time, gyro$comz, type = "l", ylab = "Z", xlab = "time", col = "blue")
}
setwd("C:/Users/gameprogrammer/Documents/walking-regress-tools/Assets/Resources")
source("funcs.R")
smoothconstant = 0.003
byTime = TRUE
acc = read.csv("daniel-walking-acc.csv", header = FALSE, col.names = c("comx","comy","comz","time"))
gyro = read.csv("daniel-walking-gyro.csv", header = FALSE, col.names = c("comx","comy","comz","time"))
acc_smooth = data.frame(comx = predict(loess(comx ~ time, data = acc, span = smoothconstant)), comy = predict(loess(comy ~ time, data = acc, span = smoothconstant)), comz = predict(loess(comz ~ time, data = acc, span = smoothconstant)), time = acc$time)
acc_smooth = zero_time(acc_smooth, 250, 284)
gyro = zero_time(gyro, 250, 284)
par(mfcol = c(3, 2))
par(mfcol = c(3, 2))
if(!byTime) {
plot(acc$comx, type = "l", col = "red")
plot(acc$comy, type = "l", col = "green")
plot(acc$comz, type = "l", col = "blue")
plot(gyro$comx, type = "l", col = "red")
plot(gyro$comy, type = "l", col = "green")
plot(gyro$comz, type = "l", col = "blue")
}
if(byTime) {
plot(acc_smooth$time, acc$comx, type = "l", col = "red")
plot(acc_smooth$time, acc$comy, type = "l", col = "green")
plot(acc_smooth$time, acc$comz, type = "l", col = "blue")
plot(gyro$time, gyro$comx, type = "l", col = "red")
plot(gyro$time, gyro$comy, type = "l", col = "green")
plot(gyro$time, gyro$comz, type = "l", col = "blue")
}
write.table(acc_smooth ,"daniel-single-step2-acc.csv", sep = ',', col.names = FALSE, row.names = FALSE)
write.table(gyro ,"daniel-single-step2-gyro.csv", sep = ',', col.names = FALSE, row.names = FALSE)
setwd("C:/Users/gameprogrammer/Documents/walking-regress-tools/Assets/Resources")
source("funcs.R")
smoothconstant = 0.003
byTime = TRUE
acc = read.csv("daniel-walking-acc.csv", header = FALSE, col.names = c("comx","comy","comz","time"))
gyro = read.csv("daniel-walking-gyro.csv", header = FALSE, col.names = c("comx","comy","comz","time"))
acc_smooth = data.frame(comx = predict(loess(comx ~ time, data = acc, span = smoothconstant)), comy = predict(loess(comy ~ time, data = acc, span = smoothconstant)), comz = predict(loess(comz ~ time, data = acc, span = smoothconstant)), time = acc$time)
acc_smooth = zero_time(acc_smooth, 250, 284)
gyro = zero_time(gyro, 250, 284)
par(mfcol = c(3, 2))
par(mfcol = c(3, 2))
if(!byTime) {
plot(acc$comx, type = "l", col = "red")
plot(acc$comy, type = "l", col = "green")
plot(acc$comz, type = "l", col = "blue")
plot(gyro$comx, type = "l", col = "red")
plot(gyro$comy, type = "l", col = "green")
plot(gyro$comz, type = "l", col = "blue")
}
if(byTime) {
plot(acc_smooth$time, acc_smooth$comx, type = "l", col = "red")
plot(acc_smooth$time, acc_smooth$comy, type = "l", col = "green")
plot(acc_smooth$time, acc_smooth$comz, type = "l", col = "blue")
plot(gyro$time, gyro$comx, type = "l", col = "red")
plot(gyro$time, gyro$comy, type = "l", col = "green")
plot(gyro$time, gyro$comz, type = "l", col = "blue")
}
write.table(acc_smooth ,"daniel-single-step2-acc.csv", sep = ',', col.names = FALSE, row.names = FALSE)
write.table(gyro ,"daniel-single-step2-gyro.csv", sep = ',', col.names = FALSE, row.names = FALSE)
setwd("C:/Users/gameprogrammer/Documents/walking-regress-tools/Assets/Resources")
source("funcs.R")
smoothconstant = 0.003
byTime = TRUE
acc = read.csv("daniel-walking-acc.csv", header = FALSE, col.names = c("comx","comy","comz","time"))
gyro = read.csv("daniel-walking-gyro.csv", header = FALSE, col.names = c("comx","comy","comz","time"))
acc_smooth = data.frame(comx = predict(loess(comx ~ time, data = acc, span = smoothconstant)), comy = predict(loess(comy ~ time, data = acc, span = smoothconstant)), comz = predict(loess(comz ~ time, data = acc, span = smoothconstant)), time = acc$time)
acc = zero_time(acc, 250, 284)
gyro = zero_time(gyro, 250, 284)
par(mfcol = c(3, 2))
par(mfcol = c(3, 2))
if(!byTime) {
plot(acc$comx, type = "l", col = "red")
plot(acc$comy, type = "l", col = "green")
plot(acc$comz, type = "l", col = "blue")
plot(gyro$comx, type = "l", col = "red")
plot(gyro$comy, type = "l", col = "green")
plot(gyro$comz, type = "l", col = "blue")
}
if(byTime) {
plot(acc$time, acc$comx, type = "l", col = "red")
plot(acc$time, acc$comy, type = "l", col = "green")
plot(acc$time, acc$comz, type = "l", col = "blue")
plot(gyro$time, gyro$comx, type = "l", col = "red")
plot(gyro$time, gyro$comy, type = "l", col = "green")
plot(gyro$time, gyro$comz, type = "l", col = "blue")
}
write.table(acc ,"daniel-single-step2-acc.csv", sep = ',', col.names = FALSE, row.names = FALSE)
write.table(gyro ,"daniel-single-step2-gyro.csv", sep = ',', col.names = FALSE, row.names = FALSE)

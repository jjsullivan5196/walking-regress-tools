setwd("C:/Users/John Sullivan/Documents/Git/walking-regress-tools/Assets/Resources")
source("funcs.R")
smoothconstant = 0.002
byTime = FALSE
acc = read.csv("daniel-walking-acc.csv", header = FALSE, col.names = c("comx","comy","comz","time"))
gyro = read.csv("daniel-walking-gyro.csv", header = FALSE, col.names = c("comx","comy","comz","time"))
#acc_smooth = data.frame(comx = predict(loess(comx ~ time, data = acc, span = smoothconstant)), comy = predict(loess(comy ~ time, data = acc, span = smoothconstant)), comz = predict(loess(comz ~ time, data = acc, span = smoothconstant)), time = acc$time)
#dan
acc = zero_time(acc, 250, 284)
gyro = zero_time(gyro, 250, 284)
#john
#acc = zero_time(acc, 100, 134)
#gyro = zero_time(gyro, 100, 134)
par(mfcol = c(3, 2))
if(!byTime) {
plot(acc$comx, type = "l", col = "red")
plot(acc$comy, type = "l", col = "green")
plot(acc$comz, type = "l", col = "blue")
plot(gyro$comx, type = "l", col = "red")
plot(gyro$comy, type = "l", col = "green")
plot(gyro$comz, type = "l", col = "blue")
}
if(byTime) {
plot(acc$time, acc$comx, type = "l", col = "red")
plot(acc$time, acc$comy, type = "l", col = "green")
plot(acc$time, acc$comz, type = "l", col = "blue")
plot(gyro$time, gyro$comx, type = "l", col = "red")
plot(gyro$time, gyro$comy, type = "l", col = "green")
plot(gyro$time, gyro$comz, type = "l", col = "blue")
}
#dan
#write.table(acc ,"daniel-single-step2-acc.csv", sep = ',', col.names = FALSE, row.names = FALSE)
#write.table(gyro ,"daniel-single-step2-gyro.csv", sep = ',', col.names = FALSE, row.names = FALSE)
#john
#write.table(acc ,"john-single-step2-acc.csv", sep = ',', col.names = FALSE, row.names = FALSE)
#write.table(gyro ,"john-single-step2-gyro.csv", sep = ',', col.names = FALSE, row.names = FALSE)
setwd("C:/Users/John Sullivan/Documents/Git/walking-regress-tools/Assets/Resources")
source("funcs.R")
smoothconstant = 0.002
byTime = FALSE
acc = read.csv("john-walking-acc.csv", header = FALSE, col.names = c("comx","comy","comz","time"))
gyro = read.csv("john-walking-gyro.csv", header = FALSE, col.names = c("comx","comy","comz","time"))
#acc_smooth = data.frame(comx = predict(loess(comx ~ time, data = acc, span = smoothconstant)), comy = predict(loess(comy ~ time, data = acc, span = smoothconstant)), comz = predict(loess(comz ~ time, data = acc, span = smoothconstant)), time = acc$time)
#dan
#acc = zero_time(acc, 250, 284)
#gyro = zero_time(gyro, 250, 284)
#john
acc = zero_time(acc, 100, 134)
gyro = zero_time(gyro, 100, 134)
par(mfcol = c(3, 2))
if(!byTime) {
plot(acc$comx, type = "l", col = "red")
plot(acc$comy, type = "l", col = "green")
plot(acc$comz, type = "l", col = "blue")
plot(gyro$comx, type = "l", col = "red")
plot(gyro$comy, type = "l", col = "green")
plot(gyro$comz, type = "l", col = "blue")
}
if(byTime) {
plot(acc$time, acc$comx, type = "l", col = "red")
plot(acc$time, acc$comy, type = "l", col = "green")
plot(acc$time, acc$comz, type = "l", col = "blue")
plot(gyro$time, gyro$comx, type = "l", col = "red")
plot(gyro$time, gyro$comy, type = "l", col = "green")
plot(gyro$time, gyro$comz, type = "l", col = "blue")
}
#dan
#write.table(acc ,"daniel-single-step2-acc.csv", sep = ',', col.names = FALSE, row.names = FALSE)
#write.table(gyro ,"daniel-single-step2-gyro.csv", sep = ',', col.names = FALSE, row.names = FALSE)
#john
#write.table(acc ,"john-single-step2-acc.csv", sep = ',', col.names = FALSE, row.names = FALSE)
#write.table(gyro ,"john-single-step2-gyro.csv", sep = ',', col.names = FALSE, row.names = FALSE)
setwd("C:/Users/John Sullivan/Documents/Git/walking-regress-tools/Assets/Resources")
source("funcs.R")
smoothconstant = 0.002
byTime = FALSE
acc = read.csv("daniel-walking-acc.csv", header = FALSE, col.names = c("comx","comy","comz","time"))
gyro = read.csv("daniel-walking-gyro.csv", header = FALSE, col.names = c("comx","comy","comz","time"))
#acc_smooth = data.frame(comx = predict(loess(comx ~ time, data = acc, span = smoothconstant)), comy = predict(loess(comy ~ time, data = acc, span = smoothconstant)), comz = predict(loess(comz ~ time, data = acc, span = smoothconstant)), time = acc$time)
#dan
acc = zero_time(acc, 250, 284)
gyro = zero_time(gyro, 250, 284)
#john
#acc = zero_time(acc, 100, 134)
#gyro = zero_time(gyro, 100, 134)
par(mfcol = c(3, 2))
if(!byTime) {
plot(acc$comx, type = "l", col = "red")
plot(acc$comy, type = "l", col = "green")
plot(acc$comz, type = "l", col = "blue")
plot(gyro$comx, type = "l", col = "red")
plot(gyro$comy, type = "l", col = "green")
plot(gyro$comz, type = "l", col = "blue")
}
if(byTime) {
plot(acc$time, acc$comx, type = "l", col = "red")
plot(acc$time, acc$comy, type = "l", col = "green")
plot(acc$time, acc$comz, type = "l", col = "blue")
plot(gyro$time, gyro$comx, type = "l", col = "red")
plot(gyro$time, gyro$comy, type = "l", col = "green")
plot(gyro$time, gyro$comz, type = "l", col = "blue")
}
#dan
#write.table(acc ,"daniel-single-step2-acc.csv", sep = ',', col.names = FALSE, row.names = FALSE)
#write.table(gyro ,"daniel-single-step2-gyro.csv", sep = ',', col.names = FALSE, row.names = FALSE)
#john
#write.table(acc ,"john-single-step2-acc.csv", sep = ',', col.names = FALSE, row.names = FALSE)
#write.table(gyro ,"john-single-step2-gyro.csv", sep = ',', col.names = FALSE, row.names = FALSE)
setwd("C:/Users/John Sullivan/Documents/Git/walking-regress-tools/Assets/Resources")
source("funcs.R")
smoothconstant = 0.002
byTime = TRUE
acc = read.csv("daniel-walking-acc.csv", header = FALSE, col.names = c("comx","comy","comz","time"))
gyro = read.csv("daniel-walking-gyro.csv", header = FALSE, col.names = c("comx","comy","comz","time"))
#acc_smooth = data.frame(comx = predict(loess(comx ~ time, data = acc, span = smoothconstant)), comy = predict(loess(comy ~ time, data = acc, span = smoothconstant)), comz = predict(loess(comz ~ time, data = acc, span = smoothconstant)), time = acc$time)
#dan
acc = zero_time(acc, 250, 284)
gyro = zero_time(gyro, 250, 284)
#john
#acc = zero_time(acc, 100, 134)
#gyro = zero_time(gyro, 100, 134)
par(mfcol = c(3, 2))
if(!byTime) {
plot(acc$comx, type = "l", col = "red")
plot(acc$comy, type = "l", col = "green")
plot(acc$comz, type = "l", col = "blue")
plot(gyro$comx, type = "l", col = "red")
plot(gyro$comy, type = "l", col = "green")
plot(gyro$comz, type = "l", col = "blue")
}
if(byTime) {
plot(acc$time, acc$comx, type = "l", col = "red")
plot(acc$time, acc$comy, type = "l", col = "green")
plot(acc$time, acc$comz, type = "l", col = "blue")
plot(gyro$time, gyro$comx, type = "l", col = "red")
plot(gyro$time, gyro$comy, type = "l", col = "green")
plot(gyro$time, gyro$comz, type = "l", col = "blue")
}
#dan
#write.table(acc ,"daniel-single-step2-acc.csv", sep = ',', col.names = FALSE, row.names = FALSE)
#write.table(gyro ,"daniel-single-step2-gyro.csv", sep = ',', col.names = FALSE, row.names = FALSE)
#john
#write.table(acc ,"john-single-step2-acc.csv", sep = ',', col.names = FALSE, row.names = FALSE)
#write.table(gyro ,"john-single-step2-gyro.csv", sep = ',', col.names = FALSE, row.names = FALSE)
acc$time[nrow(acc)]
setwd("C:/Users/John Sullivan/Documents/Git/walking-regress-tools/Assets/Resources")
source("funcs.R")
#smoothconstant = 0.002
byTime = TRUE
acc = read.csv("john-walking-acc.csv", header = FALSE, col.names = c("comx","comy","comz","time"))
gyro = read.csv("john-walking-gyro.csv", header = FALSE, col.names = c("comx","comy","comz","time"))
#acc_smooth = data.frame(comx = predict(loess(comx ~ time, data = acc, span = smoothconstant)), comy = predict(loess(comy ~ time, data = acc, span = smoothconstant)), comz = predict(loess(comz ~ time, data = acc, span = smoothconstant)), time = acc$time)
#dan
#acc = zero_time(acc, 250, 284)
#gyro = zero_time(gyro, 250, 284)
#john
acc = zero_time(acc, 100, 134)
gyro = zero_time(gyro, 100, 134)
par(mfcol = c(3, 2))
if(!byTime) {
plot(acc$comx, type = "l", col = "red")
plot(acc$comy, type = "l", col = "green")
plot(acc$comz, type = "l", col = "blue")
plot(gyro$comx, type = "l", col = "red")
plot(gyro$comy, type = "l", col = "green")
plot(gyro$comz, type = "l", col = "blue")
}
if(byTime) {
plot(acc$time, acc$comx, type = "l", col = "red")
plot(acc$time, acc$comy, type = "l", col = "green")
plot(acc$time, acc$comz, type = "l", col = "blue")
plot(gyro$time, gyro$comx, type = "l", col = "red")
plot(gyro$time, gyro$comy, type = "l", col = "green")
plot(gyro$time, gyro$comz, type = "l", col = "blue")
}
#dan
#write.table(acc ,"daniel-single-step2-acc.csv", sep = ',', col.names = FALSE, row.names = FALSE)
#write.table(gyro ,"daniel-single-step2-gyro.csv", sep = ',', col.names = FALSE, row.names = FALSE)
#john
#write.table(acc ,"john-single-step2-acc.csv", sep = ',', col.names = FALSE, row.names = FALSE)
#write.table(gyro ,"john-single-step2-gyro.csv", sep = ',', col.names = FALSE, row.names = FALSE)
acc$time[nrow(acc)]
setwd("C:/Users/John Sullivan/Documents/Git/walking-regress-tools/Assets/Resources")
source("funcs.R")
#smoothconstant = 0.002
byTime = FALSE
acc = read.csv("john-walking-acc.csv", header = FALSE, col.names = c("comx","comy","comz","time"))
gyro = read.csv("john-walking-gyro.csv", header = FALSE, col.names = c("comx","comy","comz","time"))
#acc_smooth = data.frame(comx = predict(loess(comx ~ time, data = acc, span = smoothconstant)), comy = predict(loess(comy ~ time, data = acc, span = smoothconstant)), comz = predict(loess(comz ~ time, data = acc, span = smoothconstant)), time = acc$time)
#dan
#acc = zero_time(acc, 250, 284)
#gyro = zero_time(gyro, 250, 284)
#john
acc = zero_time(acc, 100, 134)
gyro = zero_time(gyro, 100, 134)
par(mfcol = c(3, 2))
if(!byTime) {
plot(acc$comx, type = "l", col = "red")
plot(acc$comy, type = "l", col = "green")
plot(acc$comz, type = "l", col = "blue")
plot(gyro$comx, type = "l", col = "red")
plot(gyro$comy, type = "l", col = "green")
plot(gyro$comz, type = "l", col = "blue")
}
if(byTime) {
plot(acc$time, acc$comx, type = "l", col = "red")
plot(acc$time, acc$comy, type = "l", col = "green")
plot(acc$time, acc$comz, type = "l", col = "blue")
plot(gyro$time, gyro$comx, type = "l", col = "red")
plot(gyro$time, gyro$comy, type = "l", col = "green")
plot(gyro$time, gyro$comz, type = "l", col = "blue")
}
#dan
#write.table(acc ,"daniel-single-step2-acc.csv", sep = ',', col.names = FALSE, row.names = FALSE)
#write.table(gyro ,"daniel-single-step2-gyro.csv", sep = ',', col.names = FALSE, row.names = FALSE)
#john
#write.table(acc ,"john-single-step2-acc.csv", sep = ',', col.names = FALSE, row.names = FALSE)
#write.table(gyro ,"john-single-step2-gyro.csv", sep = ',', col.names = FALSE, row.names = FALSE)
setwd("C:/Users/John Sullivan/Documents/Git/walking-regress-tools/Assets/Resources")
source("funcs.R")
#smoothconstant = 0.002
byTime = FALSE
acc = read.csv("john-walking-acc.csv", header = FALSE, col.names = c("comx","comy","comz","time"))
gyro = read.csv("john-walking-gyro.csv", header = FALSE, col.names = c("comx","comy","comz","time"))
#acc_smooth = data.frame(comx = predict(loess(comx ~ time, data = acc, span = smoothconstant)), comy = predict(loess(comy ~ time, data = acc, span = smoothconstant)), comz = predict(loess(comz ~ time, data = acc, span = smoothconstant)), time = acc$time)
#dan
#acc = zero_time(acc, 250, 284)
#gyro = zero_time(gyro, 250, 284)
#john
acc = zero_time(acc, 102, 136)
gyro = zero_time(gyro, 102, 136)
par(mfcol = c(3, 2))
if(!byTime) {
plot(acc$comx, type = "l", col = "red")
plot(acc$comy, type = "l", col = "green")
plot(acc$comz, type = "l", col = "blue")
plot(gyro$comx, type = "l", col = "red")
plot(gyro$comy, type = "l", col = "green")
plot(gyro$comz, type = "l", col = "blue")
}
if(byTime) {
plot(acc$time, acc$comx, type = "l", col = "red")
plot(acc$time, acc$comy, type = "l", col = "green")
plot(acc$time, acc$comz, type = "l", col = "blue")
plot(gyro$time, gyro$comx, type = "l", col = "red")
plot(gyro$time, gyro$comy, type = "l", col = "green")
plot(gyro$time, gyro$comz, type = "l", col = "blue")
}
#dan
#write.table(acc ,"daniel-single-step2-acc.csv", sep = ',', col.names = FALSE, row.names = FALSE)
#write.table(gyro ,"daniel-single-step2-gyro.csv", sep = ',', col.names = FALSE, row.names = FALSE)
#john
#write.table(acc ,"john-single-step2-acc.csv", sep = ',', col.names = FALSE, row.names = FALSE)
#write.table(gyro ,"john-single-step2-gyro.csv", sep = ',', col.names = FALSE, row.names = FALSE)
setwd("C:/Users/John Sullivan/Documents/Git/walking-regress-tools/Assets/Resources")
source("funcs.R")
#smoothconstant = 0.002
byTime = FALSE
acc = read.csv("john-walking-acc.csv", header = FALSE, col.names = c("comx","comy","comz","time"))
gyro = read.csv("john-walking-gyro.csv", header = FALSE, col.names = c("comx","comy","comz","time"))
#acc_smooth = data.frame(comx = predict(loess(comx ~ time, data = acc, span = smoothconstant)), comy = predict(loess(comy ~ time, data = acc, span = smoothconstant)), comz = predict(loess(comz ~ time, data = acc, span = smoothconstant)), time = acc$time)
#dan
#acc = zero_time(acc, 250, 284)
#gyro = zero_time(gyro, 250, 284)
#john
acc = zero_time(acc, 102, 136)
gyro = zero_time(gyro, 102, 136)
par(mfcol = c(3, 2))
if(!byTime) {
plot(acc$comx, type = "l", col = "red")
plot(acc$comy, type = "l", col = "green")
plot(acc$comz, type = "l", col = "blue")
plot(gyro$comx, type = "l", col = "red")
plot(gyro$comy, type = "l", col = "green")
plot(gyro$comz, type = "l", col = "blue")
}
if(byTime) {
plot(acc$time, acc$comx, type = "l", col = "red")
plot(acc$time, acc$comy, type = "l", col = "green")
plot(acc$time, acc$comz, type = "l", col = "blue")
plot(gyro$time, gyro$comx, type = "l", col = "red")
plot(gyro$time, gyro$comy, type = "l", col = "green")
plot(gyro$time, gyro$comz, type = "l", col = "blue")
}
#dan
#write.table(acc ,"daniel-single-step2-acc.csv", sep = ',', col.names = FALSE, row.names = FALSE)
#write.table(gyro ,"daniel-single-step2-gyro.csv", sep = ',', col.names = FALSE, row.names = FALSE)
#john
#write.table(acc ,"john-single-step2-acc.csv", sep = ',', col.names = FALSE, row.names = FALSE)
#write.table(gyro ,"john-single-step2-gyro.csv", sep = ',', col.names = FALSE, row.names = FALSE)
setwd("C:/Users/John Sullivan/Documents/Git/walking-regress-tools/Assets/Resources")
source("funcs.R")
#smoothconstant = 0.002
byTime = FALSE
acc = read.csv("daniel-walking-acc.csv", header = FALSE, col.names = c("comx","comy","comz","time"))
gyro = read.csv("daniel-walking-gyro.csv", header = FALSE, col.names = c("comx","comy","comz","time"))
#acc_smooth = data.frame(comx = predict(loess(comx ~ time, data = acc, span = smoothconstant)), comy = predict(loess(comy ~ time, data = acc, span = smoothconstant)), comz = predict(loess(comz ~ time, data = acc, span = smoothconstant)), time = acc$time)
#dan
acc = zero_time(acc, 250, 284)
gyro = zero_time(gyro, 250, 284)
#john
#acc = zero_time(acc, 102, 136)
#gyro = zero_time(gyro, 102, 136)
par(mfcol = c(3, 2))
if(!byTime) {
plot(acc$comx, type = "l", col = "red")
plot(acc$comy, type = "l", col = "green")
plot(acc$comz, type = "l", col = "blue")
plot(gyro$comx, type = "l", col = "red")
plot(gyro$comy, type = "l", col = "green")
plot(gyro$comz, type = "l", col = "blue")
}
if(byTime) {
plot(acc$time, acc$comx, type = "l", col = "red")
plot(acc$time, acc$comy, type = "l", col = "green")
plot(acc$time, acc$comz, type = "l", col = "blue")
plot(gyro$time, gyro$comx, type = "l", col = "red")
plot(gyro$time, gyro$comy, type = "l", col = "green")
plot(gyro$time, gyro$comz, type = "l", col = "blue")
}
#dan
#write.table(acc ,"daniel-single-step2-acc.csv", sep = ',', col.names = FALSE, row.names = FALSE)
#write.table(gyro ,"daniel-single-step2-gyro.csv", sep = ',', col.names = FALSE, row.names = FALSE)
#john
#write.table(acc ,"john-single-step2-acc.csv", sep = ',', col.names = FALSE, row.names = FALSE)
#write.table(gyro ,"john-single-step2-gyro.csv", sep = ',', col.names = FALSE, row.names = FALSE)
setwd("C:/Users/John Sullivan/Documents/Git/walking-regress-tools/Assets/Resources")
source("funcs.R")
#smoothconstant = 0.002
byTime = TRUE
acc = read.csv("john-walking-acc.csv", header = FALSE, col.names = c("comx","comy","comz","time"))
gyro = read.csv("john-walking-gyro.csv", header = FALSE, col.names = c("comx","comy","comz","time"))
#acc_smooth = data.frame(comx = predict(loess(comx ~ time, data = acc, span = smoothconstant)), comy = predict(loess(comy ~ time, data = acc, span = smoothconstant)), comz = predict(loess(comz ~ time, data = acc, span = smoothconstant)), time = acc$time)
#dan
#acc = zero_time(acc, 250, 284)
#gyro = zero_time(gyro, 250, 284)
#john
acc = zero_time(acc, 102, 141)
gyro = zero_time(gyro, 102, 141)
par(mfcol = c(3, 2))
if(!byTime) {
plot(acc$comx, type = "l", col = "red")
plot(acc$comy, type = "l", col = "green")
plot(acc$comz, type = "l", col = "blue")
plot(gyro$comx, type = "l", col = "red")
plot(gyro$comy, type = "l", col = "green")
plot(gyro$comz, type = "l", col = "blue")
}
if(byTime) {
plot(acc$time, acc$comx, type = "l", col = "red")
plot(acc$time, acc$comy, type = "l", col = "green")
plot(acc$time, acc$comz, type = "l", col = "blue")
plot(gyro$time, gyro$comx, type = "l", col = "red")
plot(gyro$time, gyro$comy, type = "l", col = "green")
plot(gyro$time, gyro$comz, type = "l", col = "blue")
}
#dan
#write.table(acc ,"daniel-single-step2-acc.csv", sep = ',', col.names = FALSE, row.names = FALSE)
#write.table(gyro ,"daniel-single-step2-gyro.csv", sep = ',', col.names = FALSE, row.names = FALSE)
#john
#write.table(acc ,"john-single-step2-acc.csv", sep = ',', col.names = FALSE, row.names = FALSE)
#write.table(gyro ,"john-single-step2-gyro.csv", sep = ',', col.names = FALSE, row.names = FALSE)
setwd("C:/Users/John Sullivan/Documents/Git/walking-regress-tools/Assets/Resources")
source("funcs.R")
#smoothconstant = 0.002
byTime = TRUE
acc = read.csv("john-walking-acc.csv", header = FALSE, col.names = c("comx","comy","comz","time"))
gyro = read.csv("john-walking-gyro.csv", header = FALSE, col.names = c("comx","comy","comz","time"))
#acc_smooth = data.frame(comx = predict(loess(comx ~ time, data = acc, span = smoothconstant)), comy = predict(loess(comy ~ time, data = acc, span = smoothconstant)), comz = predict(loess(comz ~ time, data = acc, span = smoothconstant)), time = acc$time)
#dan
#acc = zero_time(acc, 250, 284)
#gyro = zero_time(gyro, 250, 284)
#john
acc = zero_time(acc, 102, 140)
gyro = zero_time(gyro, 102, 140)
par(mfcol = c(3, 2))
if(!byTime) {
plot(acc$comx, type = "l", col = "red")
plot(acc$comy, type = "l", col = "green")
plot(acc$comz, type = "l", col = "blue")
plot(gyro$comx, type = "l", col = "red")
plot(gyro$comy, type = "l", col = "green")
plot(gyro$comz, type = "l", col = "blue")
}
if(byTime) {
plot(acc$time, acc$comx, type = "l", col = "red")
plot(acc$time, acc$comy, type = "l", col = "green")
plot(acc$time, acc$comz, type = "l", col = "blue")
plot(gyro$time, gyro$comx, type = "l", col = "red")
plot(gyro$time, gyro$comy, type = "l", col = "green")
plot(gyro$time, gyro$comz, type = "l", col = "blue")
}
#dan
#write.table(acc ,"daniel-single-step2-acc.csv", sep = ',', col.names = FALSE, row.names = FALSE)
#write.table(gyro ,"daniel-single-step2-gyro.csv", sep = ',', col.names = FALSE, row.names = FALSE)
#john
#write.table(acc ,"john-single-step2-acc.csv", sep = ',', col.names = FALSE, row.names = FALSE)
#write.table(gyro ,"john-single-step2-gyro.csv", sep = ',', col.names = FALSE, row.names = FALSE)
setwd("C:/Users/John Sullivan/Documents/Git/walking-regress-tools/Assets/Resources")
source("funcs.R")
#smoothconstant = 0.002
byTime = TRUE
acc = read.csv("john-walking-acc.csv", header = FALSE, col.names = c("comx","comy","comz","time"))
gyro = read.csv("john-walking-gyro.csv", header = FALSE, col.names = c("comx","comy","comz","time"))
#acc_smooth = data.frame(comx = predict(loess(comx ~ time, data = acc, span = smoothconstant)), comy = predict(loess(comy ~ time, data = acc, span = smoothconstant)), comz = predict(loess(comz ~ time, data = acc, span = smoothconstant)), time = acc$time)
#dan
#acc = zero_time(acc, 250, 284)
#gyro = zero_time(gyro, 250, 284)
#john
acc = zero_time(acc, 102, 138)
gyro = zero_time(gyro, 102, 138)
par(mfcol = c(3, 2))
if(!byTime) {
plot(acc$comx, type = "l", col = "red")
plot(acc$comy, type = "l", col = "green")
plot(acc$comz, type = "l", col = "blue")
plot(gyro$comx, type = "l", col = "red")
plot(gyro$comy, type = "l", col = "green")
plot(gyro$comz, type = "l", col = "blue")
}
if(byTime) {
plot(acc$time, acc$comx, type = "l", col = "red")
plot(acc$time, acc$comy, type = "l", col = "green")
plot(acc$time, acc$comz, type = "l", col = "blue")
plot(gyro$time, gyro$comx, type = "l", col = "red")
plot(gyro$time, gyro$comy, type = "l", col = "green")
plot(gyro$time, gyro$comz, type = "l", col = "blue")
}
#dan
#write.table(acc ,"daniel-single-step2-acc.csv", sep = ',', col.names = FALSE, row.names = FALSE)
#write.table(gyro ,"daniel-single-step2-gyro.csv", sep = ',', col.names = FALSE, row.names = FALSE)
#john
#write.table(acc ,"john-single-step2-acc.csv", sep = ',', col.names = FALSE, row.names = FALSE)
#write.table(gyro ,"john-single-step2-gyro.csv", sep = ',', col.names = FALSE, row.names = FALSE)
setwd("C:/Users/John Sullivan/Documents/Git/walking-regress-tools/Assets/Resources")
source("funcs.R")
#smoothconstant = 0.002
byTime = TRUE
acc = read.csv("john-walking-acc.csv", header = FALSE, col.names = c("comx","comy","comz","time"))
gyro = read.csv("john-walking-gyro.csv", header = FALSE, col.names = c("comx","comy","comz","time"))
#acc_smooth = data.frame(comx = predict(loess(comx ~ time, data = acc, span = smoothconstant)), comy = predict(loess(comy ~ time, data = acc, span = smoothconstant)), comz = predict(loess(comz ~ time, data = acc, span = smoothconstant)), time = acc$time)
#dan
#acc = zero_time(acc, 250, 284)
#gyro = zero_time(gyro, 250, 284)
#john
acc = zero_time(acc, 102, 138)
gyro = zero_time(gyro, 102, 138)
par(mfcol = c(3, 2))
if(!byTime) {
plot(acc$comx, type = "l", col = "red")
plot(acc$comy, type = "l", col = "green")
plot(acc$comz, type = "l", col = "blue")
plot(gyro$comx, type = "l", col = "red")
plot(gyro$comy, type = "l", col = "green")
plot(gyro$comz, type = "l", col = "blue")
}
if(byTime) {
plot(acc$time, acc$comx, type = "l", col = "red")
plot(acc$time, acc$comy, type = "l", col = "green")
plot(acc$time, acc$comz, type = "l", col = "blue")
plot(gyro$time, gyro$comx, type = "l", col = "red")
plot(gyro$time, gyro$comy, type = "l", col = "green")
plot(gyro$time, gyro$comz, type = "l", col = "blue")
}
#dan
#write.table(acc ,"daniel-single-step2-acc.csv", sep = ',', col.names = FALSE, row.names = FALSE)
#write.table(gyro ,"daniel-single-step2-gyro.csv", sep = ',', col.names = FALSE, row.names = FALSE)
#john
#write.table(acc ,"john-single-step2-acc.csv", sep = ',', col.names = FALSE, row.names = FALSE)
#write.table(gyro ,"john-single-step2-gyro.csv", sep = ',', col.names = FALSE, row.names = FALSE)
setwd("C:/Users/John Sullivan/Documents/Git/walking-regress-tools/Assets/Resources")
source("funcs.R")
#smoothconstant = 0.002
byTime = TRUE
acc = read.csv("daniel-walking-acc.csv", header = FALSE, col.names = c("comx","comy","comz","time"))
gyro = read.csv("daniel-walking-gyro.csv", header = FALSE, col.names = c("comx","comy","comz","time"))
#acc_smooth = data.frame(comx = predict(loess(comx ~ time, data = acc, span = smoothconstant)), comy = predict(loess(comy ~ time, data = acc, span = smoothconstant)), comz = predict(loess(comz ~ time, data = acc, span = smoothconstant)), time = acc$time)
#dan
acc = zero_time(acc, 250, 284)
gyro = zero_time(gyro, 250, 284)
#john
#acc = zero_time(acc, 102, 138)
#gyro = zero_time(gyro, 102, 138)
par(mfcol = c(3, 2))
if(!byTime) {
plot(acc$comx, type = "l", col = "red")
plot(acc$comy, type = "l", col = "green")
plot(acc$comz, type = "l", col = "blue")
plot(gyro$comx, type = "l", col = "red")
plot(gyro$comy, type = "l", col = "green")
plot(gyro$comz, type = "l", col = "blue")
}
if(byTime) {
plot(acc$time, acc$comx, type = "l", col = "red")
plot(acc$time, acc$comy, type = "l", col = "green")
plot(acc$time, acc$comz, type = "l", col = "blue")
plot(gyro$time, gyro$comx, type = "l", col = "red")
plot(gyro$time, gyro$comy, type = "l", col = "green")
plot(gyro$time, gyro$comz, type = "l", col = "blue")
}
#dan
#write.table(acc ,"daniel-single-step2-acc.csv", sep = ',', col.names = FALSE, row.names = FALSE)
#write.table(gyro ,"daniel-single-step2-gyro.csv", sep = ',', col.names = FALSE, row.names = FALSE)
#john
#write.table(acc ,"john-single-step2-acc.csv", sep = ',', col.names = FALSE, row.names = FALSE)
#write.table(gyro ,"john-single-step2-gyro.csv", sep = ',', col.names = FALSE, row.names = FALSE)
acc = read.csv("john-walking-acc.csv", header = FALSE, col.names = c("comx","comy","comz","time"))
gyro = read.csv("john-walking-gyro.csv", header = FALSE, col.names = c("comx","comy","comz","time"))
acc = zero_time(acc, 102, 138)
gyro = zero_time(gyro, 102, 138)
write.table(acc ,"john-single-step2-acc.csv", sep = ',', col.names = FALSE, row.names = FALSE)
write.table(gyro ,"john-single-step2-gyro.csv", sep = ',', col.names = FALSE, row.names = FALSE)
